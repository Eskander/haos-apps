name: Update README.md

on:
  push:
    branches:
      - main
    paths:
      - '*/README.md'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate README content
        id: generate
        run: |
          # Clear the temp file if it exists
          > /tmp/addon_content.txt
          
          first_addon=true
          
          # Find all addon directories (directories containing config.yaml)
          for dir in */; do
            # Remove trailing slash
            addon_dir="${dir%/}"
            
            # Skip .git and .github directories
            if [[ "$addon_dir" == ".git" || "$addon_dir" == ".github" ]]; then
              continue
            fi
            
            # Check if this is an addon directory (has config.yaml)
            if [[ ! -f "$addon_dir/config.yaml" ]]; then
              continue
            fi
            
            # Check if README.md exists
            if [[ ! -f "$addon_dir/README.md" ]]; then
              continue
            fi
            
            echo "Processing addon: $addon_dir"
            
            # Add separator if not first addon
            if [ "$first_addon" = false ]; then
              echo "" >> /tmp/addon_content.txt
              echo "---" >> /tmp/addon_content.txt
              echo "" >> /tmp/addon_content.txt
            fi
            first_addon=false
            
            # Extract content from README.md until "## Documentation"
            # Write directly to temp file to preserve formatting
            awk '/^## Documentation/ {exit} {print}' "$addon_dir/README.md" > /tmp/addon_section.txt
            
            # Wrap screenshot in collapsible section if it exists
            if grep -q '!\[Screenshot\]' /tmp/addon_section.txt; then
              awk '/!\[Screenshot\]/ {
                print "<details>"
                print "<summary>Screenshot</summary>"
                print ""
                print $0
                print ""
                print "</details>"
                next
              }
              {print}' /tmp/addon_section.txt > /tmp/addon_section_wrapped.txt
              mv /tmp/addon_section_wrapped.txt /tmp/addon_section.txt
            fi
            
            # Append to main content file
            cat /tmp/addon_section.txt >> /tmp/addon_content.txt
          done
          
          # Remove trailing empty lines from the end
          awk '{lines[NR] = $0} END {
            for (i = 1; i <= NR; i++) {
              if (i == NR) {
                # Skip trailing empty lines
                j = i
                while (j > 0 && lines[j] ~ /^[[:space:]]*$/) j--
                for (k = 1; k <= j; k++) print lines[k]
                break
              }
            }
          }' /tmp/addon_content.txt > /tmp/addon_content_clean.txt
          mv /tmp/addon_content_clean.txt /tmp/addon_content.txt
          
          echo "Generated content saved to /tmp/addon_content.txt"

      - name: Update main README
        run: |
          awk '
            /<!-- Begin Auto Generated -->/ {
              print
              print ""
              while ((getline line < "/tmp/addon_content.txt") > 0) {
                print line
              }
              close("/tmp/addon_content.txt")
              print ""
              skip = 1
              next
            }
            /<!-- End Auto Generated -->/ {
              skip = 0
            }
            !skip
          ' README.md > README.md.new
          
          mv README.md.new README.md
          echo "Main README.md updated successfully"

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet README.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in README.md"
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add README.md
          git commit -m "chore: Update main README.md"
          git push
